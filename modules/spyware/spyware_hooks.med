#Description: 'Use this script to hook content provider queries'
#Help: 
"Hooks API calls related to spyware software, including 
- context provider queries"
#Code:

console.log('\n--------Spyware Hooks----------------');






var abstractCursor = Java.use('android.database.AbstractCursor');
var cursor = Java.use('android.database.Cursor');
var clipboardManager = Java.use('android.content.ClipboardManager');


clipboardManager.getText.implementation = function(){
        console.log('[i] Application is trying to retrieve text from clipboard:');
        console.log('Text: '+this.getText());
        return this.getText();

}

clipboardManager.getPrimaryClip.implementation = function(){
        console.log('[i] Application is trying to retrieve text from clipboard !');
        return this.getPrimaryClip();

}

clipboardManager.hasPrimaryClip.implementation = function(){
        console.log('[i] Application is checking if the clipbard has data!');
        return this.hasPrimaryClip();   
}
clipboardManager.hasText.implementation = function(){
        console.log('[i] Application is checking if the clipbard has data!');
        return this.hasText();   
}

cursor.getColumnIndex.implementation = function(columnName){
        console.log('[+-------Query Detected-----------+]');
        var res = '';
        var index = this.getColumnIndex(columnName);
        //this.moveToFirst();
        if(!this.isAfterLast() && this != null)
         res = this.getString(index);
        
        console.log("[+] DB Query for:" + columnName + " ,Result:" + res); 

        //this.moveToFirst();
        return this.getColumnIndex(columnName);
}

abstractCursor.getColumnIndex.implementation = function(columnName){
        console.log('[+-------Query Detected-----------+]');
        var res = '';
        var index = this.getColumnIndex(columnName);
        //this.moveToFirst();
        if(!this.isAfterLast() && this != null)
         res = this.getString(index);
        
        console.log("[+] DB Query for:" + columnName + " ,Result:" + res); 

        //this.moveToFirst();
        return this.getColumnIndex(columnName);
}