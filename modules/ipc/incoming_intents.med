#Description: 'Use this module to monitor incoming intents'
#Help: "Displays a message with the intent acction or extra data when it is feasible"
#Code:

console.log('\n----------Incoming Intent monitor by @ch0p1n------------');

 
var intent1 = Java.use('android.content.Intent');
var bundle1 = Java.use('android.os.Bundle');

bundle1.getByte.overloads[0].implementation = function(key){
    var ret = this.getByte(key);
    console.log('Byte Bundle key:'+key + ', value:'+ret);
    return ret;
}
bundle1.getByte.overloads[1].implementation = function(key,def){
    var ret = this.getByte(key,def);
    console.log('Byte Bundle key:'+key + ', value:'+ret);
    return ret;
}

bundle1.getChar.overloads[0].implementation = function(key){
    var ret = this.getChar(key);
    console.log('getChar Bundle key:'+key + ', value:'+ret);
    return ret;
}
bundle1.getChar.overloads[1].implementation = function(key,def){
    var ret = this.getChar(key,def);
    console.log('getChar Bundle key:'+key + ', value:'+ret);
    return ret;
}

bundle1.getCharSequence.overloads[0].implementation = function(key){
    var ret = this.getCharSequence(key);
    console.log('getCharSequence Bundle key:'+key + ', value:'+ret);
    return ret;
}
bundle1.getCharSequence.overloads[1].implementation = function(key,def){
    var ret = this.getCharSequence(key,def);
    console.log('getCharSequence Bundle key:'+key + ', value:'+ret);
    return ret;
}

bundle1.getFloat.overloads[0].implementation = function(key){
    var ret = this.getFloat(key);
    console.log('getFloat Bundle key:'+key + ', value:'+ret);
    return ret;
}
bundle1.getFloat.overloads[1].implementation = function(key,def){
    var ret = this.getFloat(key,def);
    console.log('getFloat Bundle key:'+key + ', value:'+ret);
    return ret;
}

bundle1.getShort.overloads[0].implementation = function(key){
    var ret = this.getShort(key);
    console.log('getShort Bundle key:'+key + ', value:'+ret);
    return ret;
}
bundle1.getShort.overloads[1].implementation = function(key,def){
    var ret = this.getShort(key,def);
    console.log('getShort Bundle key:'+key + ', value:'+ret);
    return ret;
}



intent1.getBooleanExtra.implementation = function(name,value){
    colorLog('[+] Incomming Boolean Extra, name: '+ name + ', value:'+value,{c:Color.Green});
    return this.getBooleanExtra(name,value);
}

intent1.getBundleExtra.implementation = function(bundlename){
    colorLog('[+] Incomming Bundle Extra, name: '+ bundlename,{c:Color.Green});
    return this.getBundleExtra(bundlename);
}

intent1.getByteArrayExtra.implementation = function(name){
    colorLog('[+] Incomming Byte Array Extra, name: '+ name,{c:Color.Green});
    return this.getByteArrayExtra(name);
}

intent1.getByteExtra.implementation = function(name,value){
    colorLog('[+] Incomming Byte Extra, name: '+ name + ', value:'+value,{c:Color.Green});
    return this.getByteExtra(name,value);
}

intent1.getCharArrayExtra.implementation = function(name){
    colorLog('[+] Incomming Char Array Extra, name: '+ name,{c:Color.Green});
    return this.getCharArrayExtra(name);
}

intent1.getCharExtra.implementation = function(name,value){
    var ret =  this.getCharExtra(name,value);
    colorLog('[+] Incomming Char Extra, name: '+ name, ', '+ret,{c:Color.Green});
    return ret;
}

intent1.getData.implementation = function(){
    var ret = this.getData();
    colorLog('[+] Incomming data URI:'+ret,{c:Color.Green});
    return ret;

}

intent1.getDataString.implementation = function(){
    var ret = this.getDataString();
    colorLog('[+] Incomming data URI:'+ret,{c:Color.Green});
    return ret;

}

intent1.getDoubleArrayExtra.implementation = function(name){
    colorLog('[+] Incomming Double Array Extra, name: '+ name,{c:Color.Green});
    return this.getDoubleArrayExtra(name);
}
intent1.getDoubleExtra.implementation = function(name,value){
    var ret =  this.getDoubleExtra(name,value);
    colorLog('[+] Incomming Double Extra, name: '+ name, ', '+ret,{c:Color.Green});
    return ret;
}

intent1.getStringExtra.implementation = function(name){
    var ret =  this.getStringExtra(name);
    colorLog('[+] Incomming String Extra, name: '+ name, ', '+ret,{c:Color.Green});
    return ret;
}

intent1.getPackage.implementation = function(){
    var ret =  this.getPackage();
    colorLog('[+] Incomming intent package origin:'+ret,{c:Color.Green});
    return ret;
}

