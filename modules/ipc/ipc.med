#Description: 'Use this module to intercept activity/service/broadcasts'
#Help: "Displays a message with the intent acction or extra data when it is feasible"
#Code:

console.log('\n----------IPC monitor by @ch0p1n------------------------');

var activity = Java.use('android.app.Activity');
var ContextWrapper = Java.use('android.content.Context');


//=----------------------------
   activity.startActivity.overload('android.content.Intent').implementation = function(intent){
       colorLog('[+] calling startActivity('+intent.getAction()+')',{c:Color.Red});     
       console.log("Intent toString: " + intent.toString());
       console.log("Intent getExtras: " + intent.getExtras());
       console.log("Intent getFlags: " + intent.getFlags());
       colorLog('[-] ----------------------------------------',{c:Color.Red});     

       return this.startActivity(intent);

   }
   activity.startActivity.overload('android.content.Intent','android.os.Bundle').implementation = function(intent,bundle){
       colorLog('[+] calling startActivity('+intent.getAction()+','+bundle+')',{c:Color.Red});
       console.log("Intent toString: " + intent.toString());
       console.log("Intent getExtras: " + intent.getExtras());
       console.log("Intent getFlags: " + intent.getFlags());
       colorLog('[-] ----------------------------------------',{c:Color.Red});     

       return this.startActivity(intent,bundle);

   }
   activity.startActivityForResult.overload('android.content.Intent','int').implementation = function(intent,requestCode){
       colorLog('[+] calling startActivityForResult(action:'+intent.getAction()+', request code:'+requestCode+')',{c:Color.Red});
       console.log("Intent toString: " + intent.toString());
       console.log("Intent getExtras: " + intent.getExtras());
       console.log("Intent getFlags: " + intent.getFlags());
       colorLog('[-] ----------------------------------------',{c:Color.Red});     

       return this.startActivityForResult(intent,requestCode);

   }
 

   if (ContextWrapper.sendBroadcast) {
    // Ref: https://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)
    ContextWrapper.sendBroadcast.overload("android.content.Intent").implementation = function(intent) {
      console.log("Intent toString: " + intent.toString());
      console.log("Intent getExtras: " + intent.getExtras());
      console.log("Intent getFlags: " + intent.getFlags());
      return this.sendBroadcast.overload("android.content.Intent").apply(this, arguments);
    };

    // Ref: https://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent, java.lang.String)
    ContextWrapper.sendBroadcast.overload("android.content.Intent", "java.lang.String").implementation = function(intent, receiverPermission) {
      console.log("Intent toString: " + intent.toString());
      console.log("Intent getExtras: " + intent.getExtras());
      console.log("Intent getFlags: " + intent.getFlags());
      console.log("Intent receiverPermission: " + receiverPermission);
      return this.sendBroadcast.overload("android.content.Intent", "java.lang.String").apply(this, arguments);
    };
  }

  if (ContextWrapper.sendStickyBroadcast) {
    ContextWrapper.sendStickyBroadcast.overload("android.content.Intent").implementation = function(intent) {
      console.log("Intent toString: " + intent.toString());
      console.log("Intent getExtras: " + intent.getExtras());
      console.log("Intent getFlags: " + intent.getFlags());
      return this.sendStickyBroadcast.overload("android.content.Intent").apply(this, arguments);
    };
  }


  if (ContextWrapper.startService) {
    //Ref: https://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)
    ContextWrapper.startService.implementation = function(service) {
      console.log("startService: " + service);
      return this.startService.apply(this, arguments);
    };
  }

  if (ContextWrapper.stopService) {
    //Ref: https://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)
    ContextWrapper.stopService.implementation = function(name) {
      console.log("stopService: " + name);
      return this.stopService.apply(this, arguments);
    };
  }

  if (ContextWrapper.registerReceiver) {
    //Ref: https://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)
    ContextWrapper.registerReceiver.overload("android.content.BroadcastReceiver", "android.content.IntentFilter").implementation = function(receiver, filter) {
      return this.registerReceiver.apply(this, arguments);
    };

    //Ref: https://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter, java.lang.String, android.os.Handler)
    ContextWrapper.registerReceiver.overload("android.content.BroadcastReceiver", "android.content.IntentFilter", "java.lang.String", "android.os.Handler").implementation = function(receiver, filter, broadcastPermission, scheduler) {
      return this.registerReceiver.apply(this, arguments);
    };
  }