{
    "Name": "ipc/ipc",
    "Description": "Use this module to intercept activity/service/broadcasts",
    "Help": "Displays a message with the intent acction or extra data when it is feasible",
    "Code": "
console.log('\\n----------IPC monitor by @ch0p1n------------------------');

var activity = Java.use('android.app.Activity');
var ContextWrapper = Java.use('android.content.Context');
// var localBroadcastManager = Java.use('androidx.localbroadcastmanager.content.LocalBroadcastManager');

// if(localBroadcastManager.sendBroadcast){
//   localBroadcastManager.sendBroadcast.overload(\"android.content.Intent\").implementation = function(intent) {
//     colorLog('[+] Calling LocalBroadcastManager SendBroadcast:',{c:Color.Green});
//     console.log(\"Intent toString: \" + intent.toString());
//     console.log(\"Intent getExtras: \" + intent.getExtras());
//     console.log(\"Intent getFlags: \" + intent.getFlags());
//     colorLog('[^] -------------------------------------------------------------------------------- [^]',{c:Color.Red});     

//     return this.sendBroadcast.overload(\"android.content.Intent\").apply(this, arguments);
//   };
// }
// if(localBroadcastManager.sendBroadcast){

//   localBroadcastManager.sendBroadcastSync.overload(\"android.content.Intent\").implementation = function(intent) {
//     colorLog('[+] Calling LocalBroadcastManager SendBroadcastSync:',{c:Color.Green});
//     console.log(\"Intent toString: \" + intent.toString());
//     console.log(\"Intent getExtras: \" + intent.getExtras());
//     console.log(\"Intent getFlags: \" + intent.getFlags());
//     colorLog('[^] -------------------------------------------------------------------------------- [^]',{c:Color.Red});     

//     return this.sendBroadcast.overload(\"android.content.Intent\").apply(this, arguments);
//   };
// }


//=----------------------------
    let anActivity = Java.use('android.app.Activity');

    anActivity.onCreate.overload('android.os.Bundle').implementation = function(bundle){
      colorLog('[+] Activity created: '+this.getComponentName()+ ' from '+this.getCallingActivity(),{c:Color.Red});
      return this.onCreate(bundle);
    }


    anActivity.onCreate.overload('android.os.Bundle','android.os.PersistableBundle').implementation = function(bundle,persistableBundle){
      colorLog('[+] Activity created: '+this.getComponentName()+ ' from '+this.getCallingActivity(),{c:Color.Red});
      return this.onCreate(bundle,persistableBundle);
    }

    anActivity.setResult.overload('int','android.content.Intent').implementation = function(i,intent){
      colorLog('[+] setResult called from: '+this.getComponentName()+ ' intent: '+intent,{c:Color.Red});
      return this.setResult(i,intent);
    }
    anActivity.setResult.overload('int').implementation = function(i){
      colorLog('[+] setResult called from: '+this.getComponentName(),{c:Color.Red});
      return this.setResult(i,intent);
    }
  
   activity.startActivity.overload('android.content.Intent').implementation = function(intent){
       colorLog('[+] SOURCE('+this+') calling startActivity('+intent.getAction()+')',{c:Color.Red});     
       console.log(\"Intent toString: \" + intent.toString());
       console.log(\"Intent getExtras: \" + intent.getExtras());
       console.log(\"Intent getFlags: \" + intent.getFlags());
       colorLog('[^] -------------------------------------------------------------------------------- [^]',{c:Color.Red});     

       return this.startActivity(intent);

   }
   activity.startActivity.overload('android.content.Intent','android.os.Bundle').implementation = function(intent,bundle){
       colorLog('[+] SOURCE('+this+') calling startActivity('+intent.getAction()+','+bundle+')',{c:Color.Red});
       console.log(\"Intent toString: \" + intent.toString());
       console.log(\"Intent getExtras: \" + intent.getExtras());
       console.log(\"Intent getFlags: \" + intent.getFlags());
       colorLog('[^] -------------------------------------------------------------------------------- [^]',{c:Color.Red});     

       return this.startActivity(intent,bundle);

   }
   activity.startActivityForResult.overload('android.content.Intent','int').implementation = function(intent,requestCode){
       colorLog('[+] SOURCE('+this+') calling startActivityForResult(action:'+intent.getAction()+', request code:'+requestCode+')',{c:Color.Red});
       console.log(\"Intent toString: \" + intent.toString());
       console.log(\"Intent getExtras: \" + intent.getExtras());
       console.log(\"Intent getFlags: \" + intent.getFlags());
       colorLog('[^] -------------------------------------------------------------------------------- [^]',{c:Color.Red});     

       return this.startActivityForResult(intent,requestCode);

   }
 
    // Ref: https://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent)
    ContextWrapper.sendBroadcast.overload(\"android.content.Intent\").implementation = function(intent) {
      colorLog('[+] SOURCE('+this+') Calling SendBroadcast:',{c:Color.Green});
      console.log(\"Intent toString: \" + intent.toString());
      console.log(\"Intent getExtras: \" + intent.getExtras());
      console.log(\"Intent getFlags: \" + intent.getFlags());
      colorLog('[^] -------------------------------------------------------------------------------- [^]',{c:Color.Red});     

      return this.sendBroadcast.overload(\"android.content.Intent\").apply(this, arguments);
    };

    // Ref: https://developer.android.com/reference/android/content/ContextWrapper.html#sendBroadcast(android.content.Intent, java.lang.String)
    ContextWrapper.sendBroadcast.overload(\"android.content.Intent\", \"java.lang.String\").implementation = function(intent, receiverPermission) {
      colorLog('[+] SOURCE('+this+') Calling SendBroadcast:',{c:Color.Green});
      console.log(\"Intent toString: \" + intent.toString());
      console.log(\"Intent getExtras: \" + intent.getExtras());
      console.log(\"Intent getFlags: \" + intent.getFlags());
      console.log(\"Intent receiverPermission: \" + receiverPermission);
      colorLog('[^] -------------------------------------------------------------------------------- [^]',{c:Color.Red});     

      return this.sendBroadcast.overload(\"android.content.Intent\", \"java.lang.String\").apply(this, arguments);
    };
  


    ContextWrapper.sendStickyBroadcast.overload(\"android.content.Intent\").implementation = function(intent) {
      colorLog('[+] SOURCE('+this+') Calling sendStickyBroadcast:',{c:Color.Green});
      console.log(\"Intent toString: \" + intent.toString());
      console.log(\"Intent getExtras: \" + intent.getExtras());
      console.log(\"Intent getFlags: \" + intent.getFlags());
      colorLog('[^] -------------------------------------------------------------------------------- [^]',{c:Color.Red});     

      return this.sendStickyBroadcast.overload(\"android.content.Intent\").apply(this, arguments);
    };
  



    //Ref: https://developer.android.com/reference/android/content/ContextWrapper.html#startService(android.content.Intent)
    ContextWrapper.startService.implementation = function(service) {
      console.log('[+] SOURCE('+this+') Calling startService:' + service);
      return this.startService.apply(this, arguments);
    };
  


    //Ref: https://developer.android.com/reference/android/content/ContextWrapper.html#stopService(android.content.Intent)
    ContextWrapper.stopService.implementation = function(name) {
      console.log('[+] SOURCE('+this+') Calling stopService: ' + name);
      return this.stopService.apply(this, arguments);
    };
  


    //Ref: https://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter)
    ContextWrapper.registerReceiver.overload(\"android.content.BroadcastReceiver\", \"android.content.IntentFilter\").implementation = function(receiver, filter) {
      colorLog('[+] SOURCE('+this+') Calling registerReceiver',{c:Color.Green});
      return this.registerReceiver.apply(this, arguments);
    };

    //Ref: https://developer.android.com/reference/android/content/ContextWrapper.html#registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter, java.lang.String, android.os.Handler)
    ContextWrapper.registerReceiver.overload(\"android.content.BroadcastReceiver\", \"android.content.IntentFilter\", \"java.lang.String\", \"android.os.Handler\").implementation = function(receiver, filter, broadcastPermission, scheduler) {
      colorLog('[+] SOURCE('+this+') Calling registerReceiver',{c:Color.Green});

      return this.registerReceiver.apply(this, arguments);
    };
"
}
