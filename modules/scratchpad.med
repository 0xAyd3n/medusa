#Description: 'Use this module to add your hooks'
#Help: "N/A"
#Code:

//-------------------trigger a function--------------------
// Java.perform(function(){
//     var X=Java.use("com.jiubang.go.music.ad.DailyRecommendActivity$2");
    
// 	Java.scheduleOnMainThread(function(){
//         var b=X.$new();
//         b.a();
//         console.log('');
// 	}) 
// })

        var hook = Java.use('com.app.formi.activities.SplashActivity');
                    var overloadCount = hook['onCreate'].overloads.length;
                    console.log("Tracing " +'onCreate' + " [" + overloadCount + " overload(s)]");
                    for (var i = 0; i < overloadCount; i++) {
                    hook['onCreate'].overloads[i].implementation = function() {
                    console.warn("*** entered " +'onCreate');

        Java.perform(function() {
             var bt = Java.use("android.util.Log").getStackTraceString(Java.use("java.lang.Exception").$new());
                console.log("nBacktrace:n" + bt);
        });   

        if (arguments.length) console.log();
        for (var j = 0; j < arguments.length; j++) {
            console.log("arg[" + j + "]: " + arguments[j]);
        }
        var retval = this['onCreate'].apply(this, arguments); // rare crash (Frida bug?)
        console.log("nretval: " + retval);
        console.warn("n*** exiting " + 'onCreate');
        return retval;
    }
}

        var hook = Java.use('com.app.formi.activities.SplashActivity');
                    var overloadCount = hook['onCreate'].overloads.length;
                    console.log("Tracing " +'onCreate' + " [" + overloadCount + " overload(s)]");
                    for (var i = 0; i < overloadCount; i++) {
                    hook['onCreate'].overloads[i].implementation = function() {
                    colorLog("*** entered " +'onCreate',{ c: Color.Green });

        Java.perform(function() {
             var bt = Java.use("android.util.Log").getStackTraceString(Java.use("java.lang.Exception").$new());
                console.log("Backtrace:" + bt);
        });   

        if (arguments.length) console.log();
        for (var j = 0; j < arguments.length; j++) {
            console.log("arg[" + j + "]: " + arguments[j]);
        }
        var retval = this['onCreate'].apply(this, arguments); // rare crash (Frida bug?)
        console.log("nretval: " + retval);
        colorLog("*** exiting " + 'onCreate',{ c: Color.Green });
        return retval;
    }
}

        var hook = Java.use('com.app.formi.activities.SplashActivity');
                    var overloadCount = hook['onCreate'].overloads.length;
                    console.log("Tracing " +'onCreate' + " [" + overloadCount + " overload(s)]");
                    for (var i = 0; i < overloadCount; i++) {
                    hook['onCreate'].overloads[i].implementation = function() {
                    colorLog("*** entered " +'onCreate',{ c: Color.Green });

        Java.perform(function() {
             var bt = Java.use("android.util.Log").getStackTraceString(Java.use("java.lang.Exception").$new());
                console.log("Backtrace:" + bt);
        });   

        if (arguments.length) console.log();
        for (var j = 0; j < arguments.length; j++) {
            console.log("arg[" + j + "]: " + arguments[j]);
        }
        var retval = this['onCreate'].apply(this, arguments); // rare crash (Frida bug?)
        console.log("nretval: " + retval);
        colorLog("*** exiting " + 'onCreate',{ c: Color.Green });
        return retval;
    }
}
