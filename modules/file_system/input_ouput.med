{
    "Name": "file_system/input_output",
    "Description": "Use this module to monitor file IO operations",
    "Help": "Hooks the following calls\n- FileOutputStream\n- FileInputStream\n- openFileInput\n- openFileOutput\n- delete",
    "Code": "
console.log('-------file IO operations monitor by @chopin--------------');


      var ContextWrapper = Java.use(\"android.content.ContextWrapper\");
      var FileNotFoundException = Java.use(\"java.io.FileNotFoundException\");
      var fileOutputStream = Java.use('java.io.FileOutputStream');
      var fileInputStream= Java.use('java.io.FileInputStream');


      fileInputStream.$init.overloads[0].implementation = function(name){
        var fname = name;
        colorLog('[+] App is opening: '+fname + ' for READ',{c: Color.Green} );
        
        return this.$init(name);
      }
      fileInputStream.$init.overloads[1].implementation = function(file){
        var fname = name.getAbsolutePath();
        colorLog('[+] App is opening: '+fname + ' for READ',{c: Color.Green} );
        
        return this.$init(file);
      }

      fileOutputStream.$init.overloads[0].implementation = function(name){
        var fname = name;
        colorLog('[+] App is opening: '+fname + ' for WRITE',{c: Color.Red} );
        
        return this.$init(name);
      }

      fileOutputStream.$init.overloads[1].implementation = function(name, append){
        var fname = name;

        colorLog('[+] App is opening: '+fname + ' for WRITE',{c: Color.Red} );
        
        return this.$init(name,append);
      }

      fileOutputStream.$init.overloads[2].implementation = function(file){
        var fname = file.getAbsolutePath();

        colorLog('[+] App is opening: '+fname + ' for WRITE',{c: Color.Red} );
        
        return this.$init(file);
      }

      fileOutputStream.$init.overloads[3].implementation = function(file, append){
        var fname = file.getAbsolutePath();

        colorLog('[+] App is opening: '+fname + ' for WRITE',{c: Color.Red} );
        
        return this.$init(file,append);
      }

      if (ContextWrapper.openFileInput) {
        // Ref: https://developer.android.com/reference/android/content/ContextWrapper.html#openFileInput(java.lang.String)
        ContextWrapper.openFileInput.overload(\"java.lang.String\").implementation = function(fileName) {
          
          colorLog('[+] App is accessing the file: '+fileName + ' for reading',{c: Color.Red} );
          return this.openFileInput.overload(\"java.lang.String\").apply(this, arguments);
       
        };
      }

      if (ContextWrapper.openFileOutput) {
        // Ref: https://developer.android.com/reference/android/content/ContextWrapper.html#openFileOutput(java.lang.String, int)
        ContextWrapper.openFileOutput.overload(\"java.lang.String\", \"int\").implementation = function(fileName, mode) {

          colorLog('[+] App is accessing the file: '+fileName,{c: Color.Red});
          return this.openFileOutput.overload(\"java.lang.String\", \"int\").apply(this, arguments);
        };
      }

      if (ContextWrapper.deleteFile) {
        // Ref: https://developer.android.com/reference/android/content/ContextWrapper.html#deleteFile(java.lang.String)
        ContextWrapper.deleteFile.overload(\"java.lang.String\").implementation = function(fileName) {
          
          /*   --- Payload Header --- */
          colorLog('[+] App is deleting the file: '+fileName,{c: Color.Red});

          return this.deleteFile.overload(\"java.lang.String\").apply(this, arguments);
        };
      }
"
}
